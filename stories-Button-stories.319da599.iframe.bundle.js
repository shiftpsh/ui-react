"use strict";(self.webpackChunk_solved_ac_ui_react_example=self.webpackChunk_solved_ac_ui_react_example||[]).push([[256],{"./src/stories/Button.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Circle:function(){return Circle},Default:function(){return Default},FullWidth:function(){return FullWidth},Primary:function(){return Primary},__namedExportsOrder:function(){return __namedExportsOrder}});var _solved_ac_ui_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../dist/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("../node_modules/react/index.js"),__webpack_require__("../node_modules/react/jsx-runtime.js"));__webpack_exports__.default={title:"Components/Button",component:_solved_ac_ui_react__WEBPACK_IMPORTED_MODULE_2__.zx,argTypes:{children:{control:"text",description:"The text to display inside the button"},backgroundColor:{control:"color",description:"The background color of the button"},hoverColor:{control:"color",description:"The background color of the button when hovered"},primary:{control:"boolean",description:"Whether the button should be styled as a primary button"},transparent:{control:"boolean",description:"Whether the button should be transparent"},disabled:{control:"boolean",description:"Whether the button should be disabled"},fullWidth:{control:"boolean",description:"Whether the button should take up the full width of its container"},circle:{control:"boolean",description:"Whether the button should be circular"},padding:{control:{type:"select",options:["none","normal"]},description:"The padding of the button"},as:{control:{type:"select",options:["div","span","button","a"]},description:"The element to render the button as"}}};const Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_solved_ac_ui_react__WEBPACK_IMPORTED_MODULE_2__.zx,{...args});Template.displayName="Template";const Default=Template.bind({});Default.args={children:"Button"};const Primary=Template.bind({});Primary.args={primary:!0,children:"Button"};const FullWidth=Template.bind({});FullWidth.args={fullWidth:!0,children:"Button"};const Circle=Template.bind({});Circle.args={circle:!0,children:"Button"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...Default.parameters?.docs?.source}}},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...Primary.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...FullWidth.parameters?.docs?.source}}},Circle.parameters={...Circle.parameters,docs:{...Circle.parameters?.docs,source:{originalSource:"args => <Button {...args} />",...Circle.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Primary","FullWidth","Circle"]}}]);